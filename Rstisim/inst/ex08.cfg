model : {
  population : {
    size = 10000;
    people : {
      names = ["female","male"];
      distribution = [0.5,0.5];
    };
    partnerships : {
      names = ["standard"];    
    };
    partnershipformers : {
      names = ["individual"];
    };
    infections : {
      names = ["chlamydia"];
    };
    gpvisits : {
      names = ["background"];
    };
    partnernotification : {
      names = ["basic"];
    };
  };
  people : {
    female : {
      lifespan = 40y;
      birthshift = 12y;
      visitgp = {rate = 0.05/1y; };
    };
    male : {
      lifespan = 40y;
      birthshift = 12y;
      visitgp = {rate = 0.05/1y; };
    };
  };
  partnerships : {
    standard : { 
      bins = {
        names = ["casual","steady"];
        distribution = [1,0];
        transitions = { 
          // go to steady after 2 months
          names = ["c2s"];
          c2s = { 
            from = "casual";
            to = "steady";
            at = { values=(2/12)y; relativeto = "birth"; };
          };
        };
      };      
      # Length of partnership is exponential with average 2y
      breakup = { symmetric="type";
        names = ["f2m"];
        f2m : {
          from="female"; to="male"; 
          value = { type="weibull"; shape=1; scale=2y; };
        };
      };
      contact = { rate = 1/2; };
    };
  };
  partnershipformers : {
    individual : {
      active = ["male","female"];
      # Seek partner only if currently no partner
      seek = { depends="currentpartners";
        0 : { rate=1/1y; };
        1 : never;
      };
      # Accept only if currently less than 3 partners
      accept = { depends="currentpartners";
        0 : 1;
        1 : 1;
        2 : 1;
        3 : 0;
      };
      # This makes sure we only get heterosexual partnerships
      mixingfactors = {
        names=["f2m","m2f"];
        f2m = { from="female"; to="male"; value=1; };
        m2f = { from="male"; to="female"; value=1; };
      };
      partnershiptype = 0;
    };
  };
  infections : {
    chlamydia : {
      bins : {
        names = ["infected","cleared","treated"];
        transitions = {
          names = ["i2c"];
          i2c : {from="infected"; to="cleared"; at={rate=1/370;};};
        };
      };
      provokegpvisit = { rate=1/100; };
      infectiousness = 0.7;
    };
  };
  gpvisits : {
    background = {
      targets=["chlamydia"];
      # start notification only if test is positive
      probabilitynotifypartners = { depends="positivetests"; 
        0 : 0; 
        1 : 1; 
      };
    };
  };
  partnernotification = {
    basic = {
      gpvisittype = 0;
        # consider also partnerships that ended with the last 6 months
        probabilitygobackuseor = 1;
        gobacktime = 5y;
        gobackpartners = 10;
        waitforreactioncouple = 1;
        probabilityfactorsender = { 
            # multiply the following two factors
            depends="product";
            # only the index case notifies
            # 0 : { depends="linknumber"; 0 : 1; 1 : 0; };
            # only notify if no one was notified before in this round
            1 : { depends="alreadynotified"; 0 : 1; 1 : 0;};
        };
        
        # only notify within partnerships which are in bin "steady"
        probabilityfactorpartnership = { bytype;
           standard : { bybin; 
               casual : 1; 
               steady : 0; 
           };
        };
    };
  };
};
